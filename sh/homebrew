#!/bin/bash

setup_homebrew() {
  title "Homebrew"

  install_homebrew
  update_homebrew
}

install_homebrew() {
  if ! command -v brew &>/dev/null; then
    info "Installing Homebrew..."
    ruby -e "$(curl --fail --silent --show-error --location https://raw.githubusercontent.com/Homebrew/install/master/install)"

    brew doctor

    success "Homebrew has been installed."
  else
    info "Homebrew has already been installed. Skipping..."
  fi
}

update_homebrew() {
  info "Updating Homebrew formulas..."
  brew update
}

brew_install_or_upgrade() {
  local formula="$1"

  if brew_is_installed "$formula"; then
    if brew_is_upgradable "$formula"; then
      info "Upgrading %s..." "$formula"
      brew upgrade "$formula"
    else
      info "Already using the latest version of %s. Skipping..." "$formula"
    fi
  else
    info "Installing %s..." "$formula"
    brew install "$formula"
  fi
}

brew_is_installed() {
  local name="$(brew_formula_alias "$1")"

  brew list -1 | grep --fixed-strings --quiet --line-regexp "$name"
}

brew_is_upgradable() {
  local name="$(brew_formula_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_force_link() {
  brew unlink "$1" && brew link "$1" --force
}

brew_force_launchctl_restart() {
  local name="$(brew_formula_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  info "Restarting %s..." "$name"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

  if launchctl list | grep --fixed-strings --quiet "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi

  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}

brew_formula_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}
